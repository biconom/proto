syntax = "proto3";

package biconom.types;

import "biconom/types/asset.proto";
import "google/protobuf/timestamp.proto";

// Ledger - это атомарный счет для учета активов одной валюты.
// Он хранит общую сумму зачислений и списаний, из которых вычисляется текущий баланс.
// Поведение счета регулируется набором флагов.
message Ledger {
	message Id {
		uint64 id = 1;
	}

	// Флаги, управляющие поведением счета. Представлены в виде битовой маски.
	message Flags {
		// Id представляет собой порядковый номер бита в маске.
		enum Id {
			ALLOW_DEBIT = 0;           // Разрешить дебет (списания).
			ALLOW_CREDIT = 1;          // Разрешить кредит (зачисления).
			ALLOW_REVERSAL = 2;        // Разрешить сторнирование (отмену) проведённых транзакций.
			ALLOW_NEGATIVE = 3;        // Разрешить отрицательный баланс (уйти в минус).
			ALLOW_OVERDRAFT_LIMIT = 4; // Разрешить использовать лимит овердрафта.
			LOCKED = 5;                // Блокировать любые новые транзакции (счёт заморожен).
		}
	}

	uint64 id = 1;
	// Актив, который учитывается на этом счете.
	Asset asset = 2;

	// --- Основные балансовые показатели ---
	// Все значения хранятся как строки для поддержки высокой точности.

	// Общая сумма всех кредитовых операций (зачислений).
	string credit_total = 3;
	// Общая сумма всех дебетовых операций (списаний).
	string debit_total = 4;
	// Лимит овердрафта, если разрешен флагом ALLOW_OVERDRAFT_LIMIT.
	string overdraft_limit = 5;

	// Бинарная маска флагов из `Ledger.Flags.Id`.
	uint32 flags = 6;

	google.protobuf.Timestamp created_at = 7;
	google.protobuf.Timestamp updated_at = 8;
}
