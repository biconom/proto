syntax = "proto3";

package biconom.types;

import "google/protobuf/timestamp.proto";
import "biconom/types/account.proto";
import "biconom/types/distributor.proto";
import "biconom/types/network.proto";

// InviteLink представляет собой реферальную ссылку, используемую для привлечения новых участников.
message InviteLink {
    // Тип реферальной ссылки.
    enum Kind {
        KIND_UNSPECIFIED = 0;
        // Персональная: всегда ведет к дистрибьютору, связанному с аккаунтом-владельцем.
        KIND_DISTRIBUTOR = 1;
        // Коллективная: использует внутреннюю логику (определяемую политикой) для определения конечного дистрибьютора.
        KIND_POOL = 2;
    }
    // Статус жизненного цикла ссылки.
    enum Status {
        STATUS_UNSPECIFIED = 0;
        // Активна и может быть использована для регистрации.
        STATUS_ACTIVE = 1;
        // Неактивна и не может быть использована.
        STATUS_INACTIVE = 2;
    }

    message Id {
        oneof identifier {
            uint64 id = 1;
            string invite_code = 2; // Уникальный код ссылки.
        }
    }

    message List {
        repeated InviteLink items = 1;
    }

    message View {
        uint32 owner_account_id = 1; // Аккаунт, который является создателем и владельцем InviteLink.
        repeated biconom.types.Account accounts = 2; // Аккаунты (который является владельцем InviteLink и Distributor).
        biconom.types.Network network = 3; // Сеть, к которой относится ссылка.
        biconom.types.Distributor distributor = 4; // Дистрибьютор-наставник.
        bool is_dynamic = 5; // Найденный дистрибьютор, является статичным результатом или динамичным.
    }

    message Pool {
        message Entity {
            message Log {
                uint64 id = 1;
                uint64 invite_link_pool_entity_id = 2;
                uint32 cycle_id = 3;
                uint32 usage_id = 4;
                uint32 distributor_id = 5;
                google.protobuf.Timestamp created_at = 6;
            }
            uint64 id = 1;
            uint64 invite_link_pool_id = 2;
            uint32 distributor_id = 3;
            optional uint32 usage_limit = 4;
            repeated Log logs = 5;
        }
        uint64 id = 1;
        uint64 invite_link_id = 2;
        uint32 invite_link_order_id = 3;
        bool enabled = 4;
        uint32 cycle_used = 5;
        optional uint32 cycle_limit = 6;
        uint64 cursor_entity_id = 7;
        uint32 cursor_usage_value = 8;
        repeated Entity entities = 9;
        google.protobuf.Timestamp created_at = 10;
        google.protobuf.Timestamp updated_at = 11;
    }

    uint64 id = 1;
    string invite_code = 2; // Уникальный код, используемый в URL (например, "REF123XYZ").
    string name = 3; // Имя ссылки, видимое ее создателю.
    bool fixed = 4; // Не изменяемая ссылка, которая не может быть изменена.
    bool enabled = 5; // Статус ссылки (активна/неактивна).
    uint32 account_id = 6;
    uint32 account_entity_id = 7;
    uint32 used_quantity = 8;
    uint64 cursor_pool_id = 9;
    repeated Pool pools = 10;
    google.protobuf.Timestamp created_at = 11;
    google.protobuf.Timestamp updated_at = 12;
}
