syntax = "proto3";

package biconom.client.wallet_currency;

import "biconom/types/account.proto";
import "biconom/types/currency.proto";
import "biconom/types/confirmation.proto";
import "biconom/types/distributor.proto";
import "biconom/types/sort.proto";
import "biconom/types/ledger_transaction.proto";
import "biconom/types/wallet_type.proto";
import "biconom/types/wallet_currency.proto";
import "biconom/types/payment_network_currency_withdrawal.proto";

// Сервис для получения информации о балансах (валютах) в кошельках пользователя.
service WalletCurrencyService {
    // Получить информацию о конкретном балансе по его составному ключу.
    // ID аккаунта берется из контекста авторизации.
    rpc Get(biconom.types.WalletCurrency.Id) returns (biconom.types.WalletCurrency);

    // Получить список балансов пользователя с фильтрацией и пагинацией.
    // ID аккаунта берется из контекста авторизации.
    rpc List(ListRequest) returns (biconom.types.WalletCurrency.List);

    // Выполнить внутренний перевод средств другому пользователю.
    // ID аккаунта отправителя берется из контекста авторизации.
    rpc Transfer(TransferRequest) returns (biconom.types.LedgerTransaction.Id);

    // Создает заявку на вывод средств и возвращает форму для ее подтверждения.
    rpc CreateWithdrawal(biconom.types.PaymentNetworkCurrencyWithdrawal.Body) returns (biconom.types.Confirmation);
}

// Запрос на получение списка балансов.
message ListRequest {
    // Фильтр по одному или нескольким типам кошельков.
    repeated biconom.types.WalletType.Id filter_wallet_type_ids = 1;

    // Фильтр по одной или нескольким валютам.
    repeated biconom.types.Currency.Id filter_currency_ids = 2;

    // Курсор для пагинации.
    optional biconom.types.WalletCurrency.Id cursor = 3;

    optional biconom.types.Sort sort = 4;
}

// Запрос на внутренний перевод.
message TransferRequest {
    // Источник перевода (кошелек + валюта).
    biconom.types.WalletCurrency.Id source = 1;
    // Сумма перевода.
    string amount = 2;

    // Получатель перевода.
    oneof recipient {
        biconom.types.Account.Id account_id = 3;
        biconom.types.Distributor.Id distributor_id = 4;
    }

    // Необязательное примечание к переводу.
    optional string memo = 5;
}
