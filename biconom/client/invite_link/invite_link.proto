syntax = "proto3";

package biconom.client.invite_link;

import "biconom/types/invite_link.proto";
import "biconom/types/sort.proto";
import "biconom/types/account.proto";
//import "biconom/types/distributor.proto";

// Сервис для получения информации о реферальных ссылках текущего пользователя.
service InviteLinkService {
    // Получает полную информацию о реферальной ссылке, включая связанные объекты.
    rpc Get(biconom.types.InviteLink.Id) returns (biconom.types.InviteLink);

    // Информация о реферальной ссылке, включая связанные объекты.
    rpc View(biconom.types.InviteLink.Id) returns (biconom.types.InviteLink.View);

    // Получает список реферальных ссылок с полной информацией.
    rpc List(ListRequest) returns (biconom.types.InviteLink.List);

    rpc CreateDistributorLink(CreateDistributorLinkRequest) returns (biconom.types.InviteLink);

//    rpc CreateLink(CreateLinkRequest) returns (CreateLinkResponse);
//    rpc UpdateLinkTarget(UpdateLinkTargetRequest) returns (UpdateLinkTargetResponse);
//    rpc SetLinkStatus(SetLinkStatusRequest) returns (SetLinkStatusResponse);
//
//    rpc Resolve(ResolveRequest) returns (ResolveResponse);
//    rpc LogVisit(LogVisitRequest) returns (LogVisitResponse);
//    rpc RegisterReferral(RegisterReferralRequest) returns (RegisterReferralResponse);
//    rpc GetLink(GetLinkRequest) returns (GetLinkResponse);
//    rpc ListLinks(ListLinksRequest) returns (ListLinksResponse);
//    rpc GetLinkStats(GetLinkStatsRequest) returns (GetLinkStatsResponse);
//    rpc GetDistributorStats(GetDistributorStatsRequest) returns (GetDistributorStatsResponse);
//
//    rpc CreatePool(CreatePoolRequest) returns (CreatePoolResponse);
//    rpc UpdatePool(UpdatePoolRequest) returns (UpdatePoolResponse);
//    rpc SetPoolStatus(SetPoolStatusRequest) returns (SetPoolStatusResponse);
//    rpc GetPool(GetPoolRequest) returns (GetPoolResponse);
//    rpc ListPools(ListPoolsRequest) returns (ListPoolsResponse);
}

message ListRequest {
    oneof cursor {
        biconom.types.InviteLink.Id invite_link_id = 1;
        uint32 account_entity_id = 2;
    }
    optional biconom.types.Sort sort = 3;
}

message CreateDistributorLinkRequest {
    string name = 1;
    bool enabled = 2;
    uint32 distributor_id = 3;
}