syntax = "proto3";

package biconom.client.payment_destination;

import "biconom/types/confirmation.proto";
import "biconom/types/payment_destination.proto";
import "biconom/types/payment_instrument.proto";
import "biconom/types/payment_network_operation_settings.proto";

// Сервис для управления "адресной книгой" пользователя (списком назначений платежей).
service PaymentDestinationService {
    // Получает одно сохраненное назначение платежа по его естественному ключу (реквизитам).
    rpc Get(biconom.types.PaymentInstrument) returns (biconom.types.PaymentDestination);

    // Получает список сохраненных назначений платежей с возможностью гибкой фильтрации.
    rpc List(ListRequest) returns (biconom.types.PaymentDestination.List);

    // Создает новое назначение платежа.
    rpc Create(CreateRequest) returns (biconom.types.Confirmation);

    // Обновляет имя существующего назначения.
    rpc UpdateName(UpdateNameRequest) returns (biconom.types.PaymentDestination);

    // Архивирует назначение, убирая его из активных списков.
    rpc Archive(biconom.types.PaymentInstrument) returns (biconom.types.PaymentDestination);

    // Активирует (восстанавливает из архива) назначение.
    rpc Activate(biconom.types.PaymentInstrument) returns (biconom.types.PaymentDestination);
}

message ListRequest {
    // Флаг для фильтрации по статусу.
    // `false` (по умолчанию): возвращать только активные записи.
    // `true`: включить в результат также и архивные записи.
    bool include_archived = 1;

    // Фильтр по форматам адресов блокчейна. Если поле заполнено, в результате
    // будут только записи с указанными форматами адресов.
    repeated biconom.types.PaymentNetworkOperationSettings.Blockchain.AddressFormat.Id blockchain_formats = 2;
}

message CreateRequest {
    // Пользовательское название для нового назначения.
    string name = 1;

    // Реквизиты для нового назначения.
    biconom.types.PaymentInstrument instrument = 2;
}

message UpdateNameRequest {
    // Реквизиты (`instrument`) назначения, которое нужно обновить.
    biconom.types.PaymentInstrument instrument = 1;
    // Новое имя.
    string name = 2;
}
